@model IEnumerable<ContactManager.Models.Address>
@using GridMvc.Html

@*@{
        ViewBag.Title = "Addresses";
    }*@

<h4>Contact address list</h4>

<p>
    @Html.ActionLink("Create New address", "Create", new { contactId = ViewBag.ContactId })
</p>

<div class="code-cut">
    @Html.Grid(Model).Columns(Columns =>
{
    Columns.Add(c => c.AddressType).Titled("Type").Filterable(true);
    Columns.Add().RenderValueAs(c => c.AddressLine1 + " " + c.AddressLine2);
    Columns.Add(c => c.City).Titled("City").Filterable(true);
    Columns.Add(c => c.StateCode).Titled("State code").Filterable(true);
    Columns.Add(c => c.Zip).Titled("Postal code").Filterable(true);
    Columns.Add().
    Encoded(false)
    .Sanitized(false)
    .SetWidth(30)
    .RenderValueAs(o => Html.ActionLink("Edit", "Edit", new { o.Id, ViewBag.ContactId }));
    Columns.Add().
   Encoded(false)
   .Sanitized(false)
   .SetWidth(30)
   .RenderValueAs(o => Html.ActionLink("View", "Details", new { o.Id, ViewBag.ContactId }));
    Columns.Add().
   Encoded(false)
   .Sanitized(false)
   .SetWidth(30)
   .RenderValueAs(o => Html.ActionLink("Delete", "Delete", new { o.Id, ViewBag.ContactId }));
}).WithPaging(5).Filterable(true).Sortable(true)

</div>

<div>
    @Html.ActionLink("Back to contacts list", "Index", "Contacts", null, new { @style = "color: blue;" })
</div>